{"ast":null,"code":"var _jsxFileName = \"/home/aaronmao/WebStorm/texttospeech/src/component/pages/DownloadProgress.js\";\nimport React, { Component } from 'react';\nimport { Line, Circle } from 'rc-progress';\nimport './DownloadProgress.css';\n\nclass DownloadProgress extends Component {\n  constructor() {\n    super();\n\n    this.step = () => {\n      const progress = this.state.progress;\n      var newPercent = progress + 1;\n\n      if (progress > 100) {\n        clearTimeout(this.tm);\n        return;\n      }\n\n      this.setState({\n        progress: newPercent\n      });\n      this.tm = setTimeout(this.step, 10);\n    };\n\n    this.state = {\n      downloadCompleted: false,\n      progress: 0\n    };\n    this.step = this.step.bind(this);\n  }\n\n  componentDidMount() {\n    this.step();\n  }\n\n  render() {\n    const progress = this.state.progress;\n    return React.createElement(Line, {\n      className: \"progressBar\",\n      percent: progress,\n      strokeWidth: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DownloadProgress;","map":{"version":3,"sources":["/home/aaronmao/WebStorm/texttospeech/src/component/pages/DownloadProgress.js"],"names":["React","Component","Line","Circle","DownloadProgress","constructor","step","progress","state","newPercent","clearTimeout","tm","setState","setTimeout","downloadCompleted","bind","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AACA,OAAO,wBAAP;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,GAAG;AACV;;AADU,SAWdC,IAXc,GAWP,MAAM;AAAA,YACDC,QADC,GACY,KAAKC,KADjB,CACDD,QADC;AAET,UAAIE,UAAU,GAAGF,QAAQ,GAAG,CAA5B;;AACA,UAAGA,QAAQ,GAAG,GAAd,EAAmB;AACfG,QAAAA,YAAY,CAAC,KAAKC,EAAN,CAAZ;AACA;AACH;;AACD,WAAKC,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAEE;AAAX,OAAd;AACA,WAAKE,EAAL,GAAUE,UAAU,CAAC,KAAKP,IAAN,EAAY,EAAZ,CAApB;AACH,KApBa;;AAEV,SAAKE,KAAL,GAAa;AACTM,MAAAA,iBAAiB,EAAE,KADV;AAETP,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,SAAKD,IAAL,GAAY,KAAKA,IAAL,CAAUS,IAAV,CAAe,IAAf,CAAZ;AACH;;AAcDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,IAAL;AACH;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACGV,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAEL,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAEA,QAAvC;AAAiD,MAAA,WAAW,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAhCoC;;AAmCzC,eAAeH,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Line, Circle } from 'rc-progress'\nimport './DownloadProgress.css'\n\nclass DownloadProgress extends Component {\n    constructor() {\n        super()\n        this.state = {\n            downloadCompleted: false,\n            progress: 0\n        }\n        \n        this.step = this.step.bind(this)\n    }\n    \n\n    step = () => {\n        const { progress } = this.state;\n        var newPercent = progress + 1\n        if(progress > 100) {\n            clearTimeout(this.tm)\n            return\n        }\n        this.setState({progress: newPercent})\n        this.tm = setTimeout(this.step, 10)\n    }\n\n    componentDidMount() {\n        this.step()\n    }\n\n    render (){\n        const { progress } = this.state\n        return (\n            <Line className=\"progressBar\" percent={progress} strokeWidth=\"1\"/>\n        )\n    }\n}\n\nexport default DownloadProgress"]},"metadata":{},"sourceType":"module"}