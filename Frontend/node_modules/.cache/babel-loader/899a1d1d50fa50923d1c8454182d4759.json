{"ast":null,"code":"var _jsxFileName = \"/home/aaronmao/WebStorm/texttospeech/src/component/pages/DownloadProgress.js\";\nimport React, { Component } from 'react';\nimport { Line, Circle } from 'rc-progress';\nimport './DownloadProgress.css';\n\nclass DownloadProgress extends Component {\n  constructor() {\n    state = {\n      downloadCompleted: false,\n      progress: 0\n    };\n    this.step = this.step.bind(this);\n  }\n\n  componentDidMount() {\n    this.step();\n  }\n\n  render() {\n    const progress = this.state.progress;\n    return React.createElement(Line, {\n      className: \"progressBar\",\n      percent: progress,\n      strokeWidth: \"3\",\n      strokeColor: \"#D3D3D3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DownloadProgress;","map":{"version":3,"sources":["/home/aaronmao/WebStorm/texttospeech/src/component/pages/DownloadProgress.js"],"names":["React","Component","Line","Circle","DownloadProgress","constructor","state","downloadCompleted","progress","step","bind","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AACA,OAAO,wBAAP;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,GAAG;AACVC,IAAAA,KAAK,GAAG;AACJC,MAAAA,iBAAiB,EAAE,KADf;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAAR;AAKA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACH;;AAcDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,IAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACGJ,QADH,GACgB,KAAKF,KADrB,CACGE,QADH;AAEL,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAEA,QAAvC;AAAiD,MAAA,WAAW,EAAC,GAA7D;AAAiE,MAAA,WAAW,EAAC,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA/BoC;;AAkCzC,eAAeJ,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Line, Circle } from 'rc-progress'\nimport './DownloadProgress.css'\n\nclass DownloadProgress extends Component {\n    constructor() {\n        state = {\n            downloadCompleted: false,\n            progress: 0\n        }\n        \n        this.step = this.step.bind(this)\n    }\n    \n\n    step = () => {\n        const { progress } = this.state;\n        var newPercent = progress + 1\n        if(progress > 100) {\n            clearTimeout(this.tm)\n            return\n        }\n        this.setState({progress: newPercent})\n        this.tm = setTimeout(this.step, 10)\n    }\n\n    componentDidMount() {\n        this.step()\n    }\n\n    render (){\n        const { progress } = this.state\n        return (\n            <Line className=\"progressBar\" percent={progress} strokeWidth=\"3\" strokeColor=\"#D3D3D3\"/>\n        )\n    }\n}\n\nexport default DownloadProgress"]},"metadata":{},"sourceType":"module"}